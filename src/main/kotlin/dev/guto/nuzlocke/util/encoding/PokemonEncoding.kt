package dev.guto.nuzlocke.util.encoding

class PokemonEncoding {
    companion object {
        private val encoding = mapOf<Int, String>(
            0x00 to " ",
            0x01 to "À",
            0x02 to "Á",
            0x03 to "Â",
            0x04 to "Ç",
            0x05 to "È",
            0x06 to "É",
            0x07 to "Ê",
            0x08 to "Ë",
            0x09 to "Ì",
            0x0A to "",
            0x0B to "Î",
            0x0C to "Ï",
            0x0D to "Ò",
            0x0E to "Ó",
            0x0F to "Ô",
            0x10 to "Œ",
            0x11 to "Ù",
            0x12 to "Ú",
            0x13 to "Û",
            0x14 to "Ñ",
            0x15 to "ß",
            0x16 to "à",
            0x17 to "á",
            0x18 to "",
            0x19 to "ç",
            0x1A to "è",
            0x1B to "é",
            0x1C to "ê",
            0x1D to "ë",
            0x1E to "ì",
            0x1F to "",
            0x20 to "î",
            0x21 to "ï",
            0x22 to "ò",
            0x23 to "ó",
            0x24 to "ô",
            0x25 to "œ",
            0x26 to "ù",
            0x27 to "ú",
            0x28 to "û",
            0x29 to "ñ",
            0x2A to "º",
            0x2B to "ª",
            0x2C to "ᵉʳ",
            0x2D to "&",
            0x2E to "+",
            0x2F to "",
            0x30 to "",
            0x31 to "",
            0x32 to "",
            0x33 to "",
            0x34 to "Lv",
            0x35 to "=",
            0x36 to ";",
            0x37 to "Ê",
            0x38 to "Ë",
            0x39 to "Ì",
            0x3A to " ",
            0x3B to "Î",
            0x3C to "Ï",
            0x3D to "Ò",
            0x3E to "Ó",
            0x3F to "Ô",
            0x40 to "",
            0x41 to "",
            0x42 to "",
            0x43 to "",
            0x44 to "",
            0x45 to "",
            0x46 to "",
            0x47 to "",
            0x48 to "",
            0x49 to "",
            0x4A to "",
            0x4B to "",
            0x4C to "",
            0x4D to "",
            0x4E to "",
            0x4F to "",
            0x50 to "▯",
            0x51 to "¿",
            0x52 to "¡",
            0x53 to "PK",
            0x54 to "MN",
            0x55 to "PO",
            0x56 to "KÉ",
            0x57 to "BLO",
            0x58 to "CK",
            0x59 to "<",
            0x5A to "Í",
            0x5B to "%",
            0x5C to "(",
            0x5D to ")",
            0x5E to "Ó",
            0x5F to "Ô",
            0x60 to "",
            0x61 to "",
            0x62 to "",
            0x63 to "",
            0x64 to "",
            0x65 to "",
            0x66 to "",
            0x67 to "",
            0x68 to "â",
            0x69 to "",
            0x6A to "",
            0x6B to "",
            0x6C to "",
            0x6D to "",
            0x6E to "",
            0x6F to "í",
            0x70 to "",
            0x71 to "",
            0x72 to "",
            0x73 to "",
            0x74 to "",
            0x75 to "",
            0x76 to "",
            0x77 to "",
            0x78 to "",
            0x79 to "",
            0x7A to "⬆",
            0x7B to "⬇",
            0x7C to "⬅",
            0x7D to "➡",
            0x7E to "*",
            0x7F to "*",
            0x80 to "*",
            0x81 to "*",
            0x82 to "*",
            0x83 to "*",
            0x84 to "ᵉ",
            0x85 to "<",
            0x86 to ">",

            // Empty
            0x87 to "",
            0x88 to "",
            0x89 to "",
            0x8A to "",
            0x8B to "",
            0x8C to "",
            0x8D to "",
            0x8E to "",
            0x8F to "",
            0x90 to "",
            0x91 to "",
            0x92 to "",
            0x93 to "",
            0x94 to "",
            0x95 to "",
            0x96 to "",
            0x97 to "",
            0x98 to "",
            0x99 to "",
            0x9A to "",
            0x9B to "",
            0x9C to "",
            0x9D to "",
            0x9E to "",
            0x9F to "",

            // Numeric Digits
            0xA0 to "ʳᵉ",
            0xA1 to "0",
            0xA2 to "1",
            0xA3 to "2",
            0xA4 to "3",
            0xA5 to "4",
            0xA6 to "5",
            0xA7 to "6",
            0xA8 to "7",
            0xA9 to "8",
            0xAA to "9",

            // Misc
            0xAB to "!",
            0xAC to "?",
            0xAD to ".",
            0xAE to "-",
            0xAF to "・",
            0xB0 to "...",
            0xB1 to "“",
            0xB2 to "”",
            0xB3 to "‘",
            0xB4 to "‘",
            0xB5 to "♂",
            0xB6 to "♀",
            0xB7 to "$$",
            0xB8 to ",",
            0xB9 to "×",
            0xBA to "/",

            // Uppercase Letters
            0xBB to "A",
            0xBC to "B",
            0xBD to "C",
            0xBE to "D",
            0xBF to "E",
            0xC0 to "F",
            0xC1 to "G",
            0xC2 to "H",
            0xC3 to "I",
            0xC4 to "J",
            0xC5 to "K",
            0xC6 to "L",
            0xC7 to "M",
            0xC8 to "N",
            0xC9 to "O",
            0xCA to "P",
            0xCB to "Q",
            0xCC to "R",
            0xCD to "S",
            0xCE to "T",
            0xCF to "U",
            0xD0 to "V",
            0xD1 to "W",
            0xD2 to "X",
            0xD3 to "Y",
            0xD4 to "Z",

            // Lowercase Letters
            0xD5 to "a",
            0xD6 to "b",
            0xD7 to "c",
            0xD8 to "d",
            0xD9 to "e",
            0xDA to "f",
            0xDB to "g",
            0xDC to "h",
            0xDD to "i",
            0xDE to "j",
            0xDF to "k",
            0xE0 to "l",
            0xE1 to "m",
            0xE2 to "n",
            0xE3 to "o",
            0xE4 to "p",
            0xE5 to "q",
            0xE6 to "r",
            0xE7 to "s",
            0xE8 to "t",
            0xE9 to "u",
            0xEA to "v",
            0xEB to "w",
            0xEC to "x",
            0xED to "y",
            0xEE to "z",

            // Misc
            0xF0 to ":",
            0xF1 to "Ä",
            0xF2 to "Ö",
            0xF3 to "Ü",
            0xF4 to "ä",
            0xF5 to "ö",
            0xF6 to "ü",
            0xFE to "\n"
        ).map { pair -> pair.key.toByte() to pair.value }.toMap()

        fun Byte.decode(): String {
            return encoding.getOrDefault(this, "")
        }

        fun ByteArray.decode(): String {
            return this.joinToString("") { it.decode() }
        }
    }
}